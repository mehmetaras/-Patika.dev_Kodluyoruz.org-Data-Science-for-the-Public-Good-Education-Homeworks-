ÖDEV-1
--1-film tablosunda bulunan title ve description sütunlarındaki verileri sıralayınız.
 SELECT title,description FROM film;
--2-film tablosunda bulunan tüm sütunlardaki verileri film uzunluğu (length) 60 dan büyük VE 75 ten küçük olma koşullarıyla sıralayınız.
 SELECT * FROM film WHERE length>60 AND length<75;
--3-film tablosunda bulunan tüm sütunlardaki verileri rental_rate 0.99 VE replacement_cost 12.99 VEYA 28.99 olma koşullarıyla sıralayınız.
SELECT * FROM film WHERE rental_rate=0.99 AND (replacement_cost=12.99 OR replacement_cost=28.99);
--4-customer tablosunda bulunan first_name sütunundaki değeri 'Mary' olan müşterinin last_name sütunundaki değeri nedir?
 SELECT first_name,last_name FROM customer WHERE first_name ='Mary';
--5-film tablosundaki uzunluğu(length) 50 ten büyük OLMAYIP aynı zamanda rental_rate değeri 2.99 veya 4.99 OLMAYAN verileri sıralayınız.
SELECT * FROM film WHERE  (NOT length >50) AND ( NOT rental_rate=2.99 OR rental_rate=4.99);

--ÖDEV-2
--film tablosunda bulunan tüm sütunlardaki verileri replacement cost değeri 12.99 dan büyük eşit ve 16.99 küçük olma koşuluyla sıralayınız ( BETWEEN - AND yapısını kullanınız.)
SELECT * FROM film WHERE replacement_cost BETWEEN 12.99 AND 16.99;
--actor tablosunda bulunan first_name ve last_name sütunlardaki verileri first_name 'Penelope' veya 'Nick' veya 'Ed' değerleri olması koşuluyla sıralayınız. ( IN operatörünü kullanınız.)
SELECT first_name,last_name FROM actor WHERE first_name IN ('Penelope','Nick','Ed');
--film tablosunda bulunan tüm sütunlardaki verileri rental_rate 0.99, 2.99, 4.99 VE replacement_cost 12.99, 15.99, 28.99 olma koşullarıyla sıralayınız. ( IN operatörünü kullanınız.)
SELECT * FROM film WHERE rental_rate IN ('0.99', '2.99', '4.99') AND replacement_cost IN ('12.99', '15.99', '28.99');

--ÖDEV-3
--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.
--country tablosunda bulunan country sütunundaki ülke isimlerinden 'A' karakteri ile başlayıp 'a' karakteri ile sonlananları sıralayınız.
SELECT * FROM country WHERE country LIKE 'A%a';
--country tablosunda bulunan country sütunundaki ülke isimlerinden en az 6 karakterden oluşan ve sonu 'n' karakteri ile sonlananları sıralayınız.
SELECT * FROM country WHERE country LIKE '_____%n';
--film tablosunda bulunan title sütunundaki film isimlerinden en az 4 adet büyük ya da küçük harf farketmesizin 'T' karakteri içeren film isimlerini sıralayınız.
SELECT * FROM film WHERE title ILIKE '%t%t%t%t';
--film tablosunda bulunan tüm sütunlardaki verilerden title 'C' karakteri ile başlayan ve uzunluğu (length) 90 dan büyük olan ve rental_rate 2.99 olan verileri sıralayınız.
SELECT * FROM film WHERE (title LIKE 'C%') AND (length>90) AND (rental_rate=2.99);

--ÖDEV 4
--film tablosunda bulunan replacement_cost sütununda bulunan birbirinden farklı değerleri sıralayınız.
SELECT DISTINCT replacement_cost FROM film ;
--film tablosunda bulunan replacement_cost sütununda birbirinden farklı kaç tane veri vardır?
SELECT DISTINCT COUNT(replacement_cost )FROM film ;
--film tablosunda bulunan film isimlerinde (title) kaç tanesini T karakteri ile başlar ve aynı zamanda rating 'G' ye eşittir?
SELECT COUNT(*) FROM film WHERE title LIKE 'T%' AND rating='G';
--country tablosunda bulunan ülke isimlerinden (country) kaç tanesi 5 karakterden oluşmaktadır?
SELECT COUNT(*) FROM COUNTRY WHERE country LIKE '_____' ;
--city tablosundaki şehir isimlerinin kaçtanesi 'R' veya r karakteri ile biter?
SELECT COUNT(*) FROM city WHERE city ILIKE '%R';

--ÖDEV 5 
--film tablosunda bulunan ve film ismi (title) 'n' karakteri ile biten en uzun (length) 5 filmi sıralayınız.
SELECT title,length FROM film WHERE title LIKE '%n' 
ORDER BY 2 DESC
LIMIT 5;
--film tablosunda bulunan ve film ismi (title) 'n' karakteri ile biten en kısa (length) ikinci 5 filmi sıralayınız.
SELECT title,length FROM film WHERE title LIKE '%n' 
ORDER BY 2 
LIMIT 5;
--customer tablosunda bulunan last_name sütununa göre azalan yapılan sıralamada store_id 1 olmak koşuluyla ilk 4 veriyi sıralayınız.
SELECT store_id,last_name FROM customer WHERE store_id=1
ORDER BY 2 DESC
LIMIT 4;

--ÖDEV 6
--film tablosunda bulunan rental_rate sütunundaki değerlerin ortalaması nedir?
SELECT AVG(rental_rate) AS average_rental_rate FROM film ;

--film tablosunda bulunan filmlerden kaçtanesi 'C' karekteri ile başlar?
SELECT COUNT(*) FROM film WHERE title LIKE 'C%' ;

--film tablosunda bulunan filmlerden rental_rate değeri 0.99 a eşit olan en uzun (length) film kaç dakikadır?
SELECT MAX(length) FROM film WHERE rental_rate=0.99 ;

--film tablosunda bulunan filmlerin uzunluğu 150 dakikadan büyük olanlarına ait kaç farklı replacement_cost değeri vardır?
SELECT DISTINCT COUNT(*),replacement_cost FROM film WHERE length>150
GROUP BY replacement_cost ;

--ÖDEV 7

--1-film tablosunda bulunan filmleri rating değerlerine göre gruplayınız.
SELECT rating FROM film
GROUP BY rating;
--2-film tablosunda bulunan filmleri replacement_cost sütununa göre grupladığımızda film sayısı 50 den fazla olan replacement_cost değerini ve karşılık gelen film sayısını sıralayınız.
SELECT replacement_cost, COUNT(*) FROM film
GROUP BY replacement_cost
HAVING COUNT(replacement_cost)>50
ORDER BY 2 DESC ;

--3. customer tablosunda bulunan store_id değerlerine karşılık gelen müşteri sayılarını nelerdir?
SELECT COUNT(*),store_id FROM customer
GROUP BY store_id ;
--4. city tablosunda bulunan şehir verilerini country_id sütununa göre gruplandırdıktan sonra en fazla şehir sayısı barındıra country_id bilgisini ve şehir sayısını paylaşınız.
SELECT country_id,count(*) FROM city
GROUP BY country_id
ORDER BY 2 DESC
LIMIT 1;

--ÖDEV-8
--test veritabanınızda employee isimli sütun bilgileri id(INTEGER), name VARCHAR(50), birthday DATE, email VARCHAR(100) olan bir tablo oluşturalım.
CREATE TABLE employee(id INTEGER PRIMARY KEY NOT NULL, name_ VARCHAR(50), birthday DATE, email VARCHAR(100))

--Oluşturduğumuz employee tablosuna 'Mockaroo' servisini kullanarak 50 adet veri ekleyelim.
insert into employee (id, name_, birthday, email) values (1, 'Chastity', '2020/06/09', 'cdrake0@walmart.com');

--Sütunların her birine göre diğer sütunları güncelleyecek 5 adet UPDATE işlemi yapalım.
UPDATE employee SET 
name_='Aras',
birthday='1999-10-01',
email='aras@aras.com.tr'
WHERE id=25 ;

--Sütunların her birine göre ilgili satırı silecek 5 adet DELETE işlemi yapalım.
DELETE FROM employee WHERE id BETWEEN 15 AND 20;




--ÖDEV 9

--Aşağıdaki sorgu senaryolarını dvdrental örnek veri tabanı üzerinden gerçekleştiriniz.

--city tablosu ile country tablosunda bulunan şehir (city) ve ülke (country) isimlerini birlikte görebileceğimiz INNER JOIN sorgusunu yazınız.
SELECT city, country FROM city
INNER JOIN country ct ON ct.country_id=city.country_id;
--customer tablosu ile payment tablosunda bulunan payment_id ile customer tablosundaki first_name ve last_name isimlerini birlikte görebileceğimiz INNER JOIN sorgusunu yazınız.
SELECT first_name,last_name,payment_id FROM customer
INNER JOIN payment P ON P.customer_id=customer.customer_id ;
--customer tablosu ile rental tablosunda bulunan rental_id ile customer tablosundaki first_name ve last_name isimlerini birlikte görebileceğimiz INNER JOIN sorgusunu yazınız.
SELECT first_name,last_name,rental_id FROM customer C
INNER JOIN rental R ON R.customer_id=C.customer_id ;

----ÖDEV-10
--city tablosu ile country tablosunda bulunan şehir (city) ve ülke (country) isimlerini birlikte görebileceğimiz LEFT JOIN sorgusunu yazınız.
SELECT  city,country  FROM city
LEFT JOIN country ON country.country_id=city.country_id ;
--customer tablosu ile payment tablosunda bulunan payment_id ile customer tablosundaki first_name ve last_name isimlerini birlikte görebileceğimiz RIGHT JOIN sorgusunu yazınız.
SELECT payment_id,first_name,last_name FROM customer
RIGHT JOIN payment ON payment.customer_id=customer.customer_id ;
--customer tablosu ile rental tablosunda bulunan rental_id ile customer tablosundaki first_name ve last_name isimlerini birlikte görebileceğimiz FULL JOIN sorgusunu yazınız.
SELECT rental_id,first_name,last_name FROM customer
FULL JOIN rental ON rental.customer_id=customer.customer_id ;

--ÖDEV-11

--actor ve customer tablolarında bulunan first_name sütunları için tüm verileri sıralayalım.
(SELECT first_name,last_name FROM actor)
UNION 
(SELECT first_name,last_name FROM customer) v
--actor ve customer tablolarında bulunan first_name sütunları için kesişen verileri sıralayalım.
(SELECT first_name,last_name FROM actor)
INTERSECT
(SELECT first_name,last_name FROM customer) ;
--actor ve customer tablolarında bulunan first_name sütunları için ilk tabloda bulunan ancak ikinci tabloda bulunmayan verileri sıralayalım.
(SELECT first_name FROM actor)
EXCEPT
(SELECT first_name FROM customer) ;
--İlk 3 sorguyu tekrar eden veriler için de yapalım.
(SELECT first_name,last_name FROM actor)
UNION ALL
(SELECT first_name,last_name FROM customer) ;

--ÖDEV 12
--1--film tablosunda film uzunluğu length sütununda gösterilmektedir. Uzunluğu ortalama film uzunluğundan fazla kaç tane film vardır?
SELECT COUNT(*) FROM film
WHERE film.length>
(SELECT AVG(length) FROM film) ;

--2--film tablosunda en yüksek rental_rate değerine sahip kaç tane film vardır?
SELECT COUNT(*) FROM film
WHERE film.rental_rate= (SELECT MAX(rental_rate) FROM film) ;

--3--film tablosunda en düşük rental_rate ve en düşün replacement_cost değerlerine sahip filmleri sıralayınız.
SELECT title,
FROM film
WHERE (film.rental_rate= (SELECT MIN(rental_rate) FROM film) ) AND (film.replacement_cost= (SELECT MIN(replacement_cost) FROM film)) ;
--4--payment tablosunda en fazla sayıda alışveriş yapan müşterileri(customer) sıralayınız.
SELECT first_name,COUNT(payment_id) FROM customer JOIN payment ON payment.customer_id=customer.customer_id
GROUP BY first_name
ORDER BY 2 DESC;
--SUBQUERY METHOD ;
SELECT first_name,
(SELECT COUNT(payment_id) FROM payment WHERE customer_id=customer.customer_id) AS TOTAL_
FROM customer
ORDER BY TOTAL_ DESC ;











